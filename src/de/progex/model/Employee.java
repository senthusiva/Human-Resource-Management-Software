package de.progex.model;

import java.lang.reflect.Field;

public class Employee {
	private int employee_id;
	private String firstName;
	private String lastName;
	private String email;
	private String streetAndNumber;
	private String city;
	private String skills;
	private String department;
	private double salary;

	public Employee() {
	}

	public Employee(String firstName, String lastName, String email, String streetAndNumber, String city, String skills,
			String department, double salary) {
		if (setFirstName(firstName))
			this.firstName = firstName;
		if (setLastName(lastName))
			this.lastName = lastName;
		if (setEmail(email))
			this.email = email;
		if (setStreetAndNumber(streetAndNumber))
			this.streetAndNumber = streetAndNumber;
		if (setCity(city))
			this.city = city;
		if (setSkills(skills))
			this.skills = skills;
		if (setDepartment(department))
			this.department = department;
		this.salary = salary;
	}

	public int getEmployee_id() {
		return employee_id;
	}

	// Autogenerated
	public void setEmployee_id(int employee_id) {
		this.employee_id = employee_id;
	}

	public String getFirstName() {
		return firstName;
	}

	public boolean setFirstName(String firstName) {
		String regex1 = "^([a-zA-Z]{2,}\\s[a-zA-z]{1,}'?-?[a-zA-Z]{2,}\\s?([a-zA-Z]{1,})?)";
		String regex = "[a-zA-Z]{3,30}+";
		if (firstName.matches(regex) | firstName.matches(regex1)) {
			this.firstName = firstName;
			return true;
		} else {
			System.out.println("Name should at least contain 3 characters, no numbers and not being empty!");
			return false;
		}
	}

	public String getLastName() {
		return lastName;
	}

	public boolean setLastName(String lastName) {
		String regex1 = "^([a-zA-Z]{2,}\\s[a-zA-z]{1,}'?-?[a-zA-Z]{2,}\\s?([a-zA-Z]{1,})?)";
		String regex = "[a-zA-Z]{3,30}+";
		if (lastName.matches(regex) | lastName.matches(regex1)) {
			this.lastName = lastName;
			return true;
		} else {
			System.out.println("LastName should at least contain 3 characters, no numbers and not being empty");
			return false;
		}
	}

	public String getEmail() {
		return email;
	}

	public boolean setEmail(String email) {
		String regex = "^[\\w-_\\.+]*[\\w-_\\.]\\@([\\w]+\\.)+[\\w]+[\\w]$";
		if (email.matches(regex)) {
			this.email = email;
			return true;
		} else {
			System.out.println("Field must be filled");
			return false;
		}
	}

	public String getStreetAndNumber() {
		return streetAndNumber;
	}

	public boolean setStreetAndNumber(String streetAndNumber) {
		String regex = "^([\\S\\s]+?)\\s+([\\d-\\s]*?)\\s*([\\w])?$";
		if (streetAndNumber.matches(regex)) {
			this.streetAndNumber = streetAndNumber;
			return true;
		} else {
			System.out.println("setStreetAndNumber regex failed, or field musst be filled");
			return false;
		}
	}

	public String getCity() {
		return city;
	}

	public boolean setCity(String city) {
		String regex1 = "^[^\\W\\d_]+\\.?(?:[-\\s'�][^\\W\\d_]+\\.?)*$";
		String regex = "^[a-zA-Z������ ._-]+$";
		if (city.matches(regex) | (city.matches(regex1))) {
			this.city = city;
			return true;
		} else {
			System.out.println("city regex failed, or field musst be filled");
			return false;
		}
	}

	public String getSkills() {
		return skills;
	}

	public boolean setSkills(String skills) {
		String regex1 = "^([a-zA-Z]{2,}\\s[a-zA-z]{2,}'?-?[a-zA-Z]{2,}\\s?([a-zA-Z]{1,})?)/[-!$%^&*()_+|~=`{}\\\\[\\\\]:\\\";'<>?,.\\\\/]/";
		if (skills.contains(", ") | (skills.contains("") | (skills.matches(regex1)))) {
			this.skills = skills;
			return true;
		} else {
			System.out.println("setSkills regex failed, or field musst be filled");
			return false;
		}

	}

	public String getDepartment() {
		return department;
	}

	public boolean setDepartment(String department) {
		if (department.contains("d-")) {
			this.department = department;
			return true;
		} else {
			System.out.println("please set department 'd-nr.'");
			return false;
		}
	}

	public double getSalary() {
		return salary;
	}

	public void setSalary(double salary) {
		this.salary = salary;
	}

	public boolean isVerified() throws IllegalAccessException {
		for (Field f : getClass().getDeclaredFields()) {
			if (f.get(this) == null) {
				return false;
			}
		}
		return true;
	}
	
	public void copyEmployee(Employee toBeCopied) {
		
		if (setFirstName(firstName))
			this.firstName = toBeCopied.firstName;
		if (setLastName(lastName))
			this.lastName = toBeCopied.lastName;
		if (setEmail(email))
			this.email = toBeCopied.email;
		if (setStreetAndNumber(streetAndNumber))
			this.streetAndNumber = toBeCopied.streetAndNumber;
		if (setCity(city))
			this.city = toBeCopied.city;
		if (setSkills(skills))
			this.skills = toBeCopied.skills;
		if (setDepartment(department))
			this.department = toBeCopied.department;
		this.salary = toBeCopied.salary;
		
	}
}
